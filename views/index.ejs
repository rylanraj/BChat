<body id="main-page">
<div class="user_profile_section">
    <div class="section_name">
      <h2>Chat</h2>
      <div class="inbox_display" id="display">
        <% otherUsers.forEach(user => { %>
          <div class="inbox" onclick="Inbox('<%= user.inboxID %>')">
            <div class="chat_message">
              <img src="<%= "/" + user.profilePicture %>" alt="pp" width="50" height="50" class="profile_picture">
              <div class="message_content">
                <h1><%= user.otherUserName %></h1>
                <p id="latest<%= user.inboxID %>"><%= user.lastMessage %></p>
                
              </div>
            </div>
          </div>
          <hr style="color:black !important; height: 2px;">
        <% }) %>
      </div>
    </div>
  </div>

<div class="user_feed_section">
    <div style="position: fixed; width: 59.3%;" class="section_name">
        <h2>Student Feed</h2>
    </div>
    <div style="margin-top: 50px;">
        <%
        function formatDate(timeString) {
            const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            
            const date = new Date(timeString);
            const month = months[date.getMonth()];
            const day = date.getDate();
            const year = date.getFullYear();
            
            const hours = date.getHours();
            const minutes = date.getMinutes();
            const ampm = hours >= 12 ? 'PM' : 'AM';
            const formattedHours = hours % 12 || 12; // Convert 0 to 12 for AM/PM format
            const formattedMinutes = minutes < 10 ? '0' + minutes : minutes; // Add leading zero if minutes is less than 10
            
            return `${month} ${day}, ${year} - ${formattedHours}:${formattedMinutes} ${ampm}`;
        }
        %>
        <% posts.slice().reverse().forEach(function(post) { %>
            <div class="post feed-post">
              <% const userData = userDataMap[post.UserID]; %>
              <div class="user-info">
                  <a href=<%="/profile/" + post.UserID%>>
                <img class="user-info-img" src="<%= "/" + userData.profilePicture %>" alt="user_profile_picture" width="50" height="50">
                  </a>
                  <div class="text-user-info">
                      <p class="post-info" id="post-username">
                          <%= userData.username %>
                      </p>
                      <p class="post-info" id="post-date">
                          <%= formatDate(post.TimePosted) %>
                      </p>
                  </div>
                <div class="report-section" style="text-align: right; margin-left: 270px; ">

                    <!-- Kebab button and dropdown menu -->
                    <div class="kebab-menu">
                        <button class="post-kebab" onclick="toggleMenu('<%= post.PostID %>')">
                            <span class="dot"></span>
                            <span class="dot"></span>
                            <span class="dot"></span>
                        </button>

                        <!-- Dropdown menu -->
                        <div id="dropdownMenu<%= post.PostID %>" class="dropdown-menu-kebab">

                            <% if (post.UserID !== user.UserID) { %>
                                <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                <a onclick="report('<%= post.PostID %>')">Report</a>
                                <a href="/chat/check/<%= post.UserID %>">Message Creator</a>
                            <% } else if (post.UserID === user.UserID || user.role === "admin") { %>
                                <a href=<%="/post/edit/" + post.PostID%>>Edit</a>
                                <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                <a href="#" onclick="deletePost('<%= post.PostID %>')">Delete</a>
                            <% } %>
                        </div>
                    </div>
                    <div id="popup<%= post.PostID %>" class="popup">
                      <div class="popup-content">
                        <p>Are you sure you want to report this post?</p><div class="buttons">
                          <button class="yes-btn" onclick="Submit('<%= post.PostID %>')">Yes</button>
                          <button class="no-btn" onclick="Close('<%= post.PostID %>')">No</button>
                        </div>
                      </div>
                    </div>
                  </div>
              </div>
                <%
                    function formatTitle(title, charLimit) {
                        let words = title.split(' ');
                        let longWordExists = true;

                        while (longWordExists) {
                            longWordExists = false;
                            words = words.flatMap(word => {
                                if (word.length > charLimit) {
                                    longWordExists = true;
                                    return [word.slice(0, charLimit), word.slice(charLimit)];
                                }
                                return word;
                            });
                        }

                        return words.join(' ');
                    }
                %>
                <%
                    function truncateTitle(title, charLimit) {
                        if (title.length > charLimit) {
                            return title.slice(0, charLimit) + '...';
                        }
                        return title;
                    }
                %>
                <a class="post-link" href=<%="/post/" + post.PostID%>>
                    <div style="text-align: left; margin-left: 70px;"><h3><%= truncateTitle(formatTitle(post.Title, 33), 70) %> </h3><p id="post"><%= formatTitle(truncateTitle(post.Description, 200), 70) %></p></div>
                </a>
              <% if (post.Picture) { %>
                <a href=<%="/post/" + post.PostID%>>
                    <img class="post-img" src="<%= "/" + post.Picture %>" alt="post_picture" width="400" height="200">
                </a>
              <% } %>
              <div class="like-section" style="text-align: left; margin-left: 70px;">
                

                <button style=" padding-top: 5px;padding-bottom: 5px; margin-top: 10px;border-radius: 24px; border: none; background-color: #d3dcdc ;" onclick="toggleLike('<%= post.PostID %>')">
                    <img style=" width: 50%; height: 50%;" src="/images/facebook-like-48.png" alt="Like_button">
                </button>
                <span id="like-count-<%= post.PostID %>"><%= post.likeCount %></span>
              </div>
            </div>
            <% }); %>
    <div >
        <hr>
        <p id="post-footer" style="text-align: center; padding-bottom: 4rem;">
            *Cricket noises.*<br>
            No older posts found.
        </p> 
    </div>
    </div>
</div>
<!-- <footer class="footer-main" id="index-footer">

</footer> -->
</body>
<script>

    function copyLink(postId) {
        // Prevent the default action of the <a> tag
        event.preventDefault();

        // Construct the URL of the post
        console.log(postId);
        console.log(window.location.origin);
        const postUrl = window.location.origin + '/post/' + postId;
        console.log(postUrl);
        // Copy the URL to the clipboard
        navigator.clipboard.writeText(postUrl)
            .then(() => {
                console.log('Link copied to clipboard');

                // Create a new div element for the message
                const messageDiv = document.createElement('div');
                messageDiv.textContent = 'Copied to clipboard';
                messageDiv.style.position = 'fixed';
                messageDiv.style.bottom = '20px';
                messageDiv.style.left = '50%';
                messageDiv.style.backgroundColor = 'lightgreen';
                messageDiv.style.padding = '10px';
                messageDiv.style.borderRadius = '5px';

                // Append the message to the body
                document.body.appendChild(messageDiv);

                // Remove the message after 2 seconds
                setTimeout(() => {
                    document.body.removeChild(messageDiv);
                }, 2000);
            })
            .catch(err => {
                console.error('Error copying link to clipboard:', err);
            });
    }

    async function deletePost(postId) {
        try {
            const response = await fetch(`/post/delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                // If the server responds with a success status, redirect to the desired page
                window.location.href = '/';
            } else {
                console.error('Failed to delete post');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }

    const userID = '<%= user.UserID %>';
    window.onload = function() {
        // Get all dropdown menus
        var dropdowns = document.getElementsByClassName('dropdown-menu-kebab');

        // Initialize style.display to 'none' for each dropdown menu
        for (var i = 0; i < dropdowns.length; i++) {
            dropdowns[i].style.display = 'none';
        }
    }
    function toggleMenu(postId) {
        var menu = document.getElementById('dropdownMenu' + postId);
        if (menu.style.display === 'none') {
            menu.style.display = 'block';
        } else {
            menu.style.display = 'none';
        }
    }
    document.addEventListener('click', function(event) {
        var kebabMenus = document.querySelectorAll('.kebab-menu');
        var isClickInside = Array.from(kebabMenus).some(menu => menu.contains(event.target));

        if (!isClickInside) {
            var dropdowns = document.querySelectorAll('.dropdown-menu-kebab');
            for (var i = 0; i < dropdowns.length; i++) {
                dropdowns[i].style.display = 'none';
            }
        }
    });

function Inbox(otherInboxID) {
    window.location.href = '/chat/'+otherInboxID; 
  }

  async function toggleLike(postId) {
    try { 
      const response = await fetch(`/like/${postId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      const result = await response.json();
      if (result.success) {
        const likeCountElement = document.getElementById(`like-count-${postId}`);
        let currentCount = parseInt(likeCountElement.textContent);
        likeCountElement.textContent = result.liked ? currentCount + 1 : currentCount - 1;
      } else {
        console.error('Failed to toggle like');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  }

  async function report(postId) {
    document.getElementById('popup'+postId).style.display = 'block';
  }
  async function Submit(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
    console.log(postId);
  
    await fetch(`/report/${postId}`, {
      method: 'POST',
      userID: userID,

    });
  
  }
  async function Close(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
  }

  </script>