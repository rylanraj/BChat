<!DOCTYPE html>
<html lang="en">

<body>
   

    <% if (user.UserID === otherUser.UserID) { %>
    <div class="user_profile_section">
        <div class="section_name">
            <h2>My Profile</h2>
        </div>
        <form id="profile-form" action=<%="/profile/" + otherUser.UserID%> method="POST" enctype="multipart/form-data">
            
            <div style="text-align: center; margin-top: 10%;" class="form-group">
                <label for="profilePicture">
                    <% if (otherUser.ProfilePicture === null) { %>
                        <img style="width: 11vw; height: 11vw; border-radius: 50%; object-fit: cover;  border-style: solid;background-color: #d3dcdc; border-color: #d3dcdc;" src="/images/default.jpg" alt="missing_profile_picture">
                    <% } else { %>
                        <img style="width: 11vw; height: 11vw; border-radius: 50%; object-fit: cover;  border-style: solid;background-color: #d3dcdc; border-color: #d3dcdc;" src="<%="/" + otherUser.ProfilePicture %>" alt="profile_picture">
                    <% } %>
                </label>
                
                
                <input style="display: none;" type="file" class="" id="profilePicture" name="profilePicture">
                
                <div style="margin-top: 5%; font-size: 2vw; color: #003c71;font-size: larger; font-weight: bold;">
                    <p id="username-text"><%=otherUser.UserName%></p>
                    
                    <input class="form-control" id="username" name="username" maxlength="100" style="display: none; max-width: 60%; text-align: center; margin-left: 20%;" value="<%=otherUser.UserName%>">
                </div>
            <div style="border-style: solid;width: 90% !important; margin-left: 5%;margin-top: 5%; border-width: 1px;border-color: #d3dcdc;">
                <div class="form-group">
                    <div style="margin-top: 5%;" class="bio-text">
                        
                        <p id="nickname-text"><%=otherUser.UserNickName%></p>
                        
                        <input class="form-control" id="nickname" name="nickname" maxlength="30" style="display: none; max-width: 60%; text-align: center; margin-left: 20%;" value="<%=otherUser.UserNickName%>">
                    </div>
                    <div style="margin-top: 5%; " class="bio-text">
                        <p id="program-text">Program: <%= otherUser.Program ? otherUser.Program : 'Empty' %></p>
                        
                        <input class="form-control" id="program" name="program" maxlength="100" style="display: none; max-width: 60%; text-align: center; margin-left: 20%;" value="<%=otherUser.Program || 'Empty'%>">
                    </div>
                    <div style="margin-top: 5%; " class="bio-text">
                        <p id="studentSet-text">Set: <%= otherUser.StudentSet ? otherUser.StudentSet : 'Empty' %></p>
                    </div>
                </div>
                <%
                // Get the DateJoined value from otherUser
                const dateJoined = new Date(otherUser.DateJoined);

                // Extract year, month, and day
                const year = dateJoined.getFullYear();
                const month = String(dateJoined.getMonth() + 1).padStart(2, '0');
                const day = String(dateJoined.getDate()).padStart(2, '0');

                // Formatted date in YYYY-MM-DD format
                const formattedDate = `${year}-${month}-${day}`;
                %>
                <div style="margin-top: 5%; " class="bio-text">
                    <p id="dateJoined-text"> From <%= formattedDate %></p>
                </div>
                    <div style="margin-top: 5%; " class="bio-text">
                        <p id="email-text"><%=otherUser.Email%></p>
                        
                        <input class="form-control" id="email" name="email" style="display: none; max-width: 60%; text-align: center; margin-left: 20%;" value="<%=otherUser.Email%>">
                    </div>
                   
                </div>
            </div>
    </form>
        <p id="error-message" style="color: red; display: none;"></p> <!-- Error message will be inserted here -->
    
    </div>

    <div class="user_feed_section">
        <div style="position: fixed; width: 59.3%;" class="section_name">
            <h2>Your Posts</h2>
        </div>
        <div style="margin-top: 50px;">
            <%
            function formatDate(timeString) {
                const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                
                const date = new Date(timeString);
                const month = months[date.getMonth()];
                const day = date.getDate();
                const year = date.getFullYear();
                
                const hours = date.getHours();
                const minutes = date.getMinutes();
                const ampm = hours >= 12 ? 'PM' : 'AM';
                const formattedHours = hours % 12 || 12; // Convert 0 to 12 for AM/PM format
                const formattedMinutes = minutes < 10 ? '0' + minutes : minutes; // Add leading zero if minutes is less than 10
                
                return `${month} ${day}, ${year} - ${formattedHours}:${formattedMinutes} ${ampm}`;
            }
            %>
            <% posts.slice().reverse().forEach(function(post) { %>
                <div class="post feed-post">
                    <% const userData = userDataMap[post.UserID]; %>
                    <div class="user-info">
                        <a href=<%="/profile/" + post.UserID%>>
                            <img class="user-info-img" src="<%= "/" + userData.profilePicture %>" alt="user_profile_picture" width="50" height="50">
                        </a>
                        <div class="text-user-info">
                            <p class="post-info" id="post-username">
                                <%= userData.username %>
                            </p>
                            <p class="post-info" id="post-date">
                                <%= formatDate(post.TimePosted) %>
                            </p>
                        </div>
                        <div class="report-section" style="text-align: right; margin-left: 270px; ">



                            <!-- Kebab button and dropdown menu -->
                            <div class="kebab-menu">
                                <button class="post-kebab" onclick="toggleMenu('<%= post.PostID %>')">
                                    <span class="dot"></span>
                                    <span class="dot"></span>
                                    <span class="dot"></span>
                                </button>

                                <!-- Dropdown menu -->
                                <div id="dropdownMenu<%= post.PostID %>" class="dropdown-menu-kebab">

                                    <% if (post.UserID !== user.UserID) { %>
                                        <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                        <a href="#">Report</a>
                                        <a href="#">Message Creator</a>
                                    <% } else if (post.UserID === user.UserID || user.role === "admin") { %>
                                    <a href=<%="/post/edit/" + post.PostID%>>Edit</a>
                                    <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                    <a href="#" onclick="deletePost('<%= post.PostID %>')">Delete</a>
                                    <% } %>
                                </div>
                            </div>
                            <div id="popup<%= post.PostID %>" class="popup">
                                <div class="popup-content">
                                    <p>Are you sure you want to report this post?</p>
                                    <button onclick="Submit('<%= post.PostID %>')">Yes</button>
                                    <button onclick="Close('<%= post.PostID %>')">No</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <%
                        function formatTitle(title, charLimit) {
                            let words = title.split(' ');
                            let longWordExists = true;

                            while (longWordExists) {
                                longWordExists = false;
                                words = words.flatMap(word => {
                                    if (word.length > charLimit) {
                                        longWordExists = true;
                                        return [word.slice(0, charLimit), word.slice(charLimit)];
                                    }
                                    return word;
                                });
                            }

                            return words.join(' ');
                        }
                    %>
                    <%
                        function truncateTitle(title, charLimit) {
                            if (title.length > charLimit) {
                                return title.slice(0, charLimit) + '...';
                            }
                            return title;
                        }
                    %>
                    <a class="post-link" href=<%="/post/" + post.PostID%>>
                        <div style="text-align: left; margin-left: 70px;"><h3><%= truncateTitle(formatTitle(post.Title, 33), 70) %> </h3><p id="post"><%= formatTitle(truncateTitle(post.Description, 200), 70) %></p></div>
                    </a>
                    <% if (post.Picture) { %>
                    <a href=<%="/post/" + post.PostID%>>
                        <img class="post-img" src="<%= "/" + post.Picture %>" alt="post_picture" width="400" height="200">
                    </a>
                    <% } %>
                    <div class="like-section" style="text-align: left; margin-left: 70px;">


                        <button style=" padding-top: 5px;padding-bottom: 5px; margin-top: 10px;border-radius: 24px; border: none; background-color: #d3dcdc ;" onclick="toggleLike('<%= post.PostID %>')">
                            <img style=" width: 50%; height: 50%;" src="/images/facebook-like-48.png" alt="Like_button">
                        </button>
                        <span id="like-count-<%= post.PostID %>"><%= post.likeCount %></span>
                    </div>
                </div>
                <% }); %>
            <div>
                <hr>
                <p id="post-footer" style="text-align: center; padding-bottom: 4rem;">
                    *Cricket noises.*<br>
                    No older posts found.
                </p>
            </div>

        </div>
    </div>
    <!-- <footer class="footer-main" id="index-footer"></footer> -->
    
    
    
   
    

    <% } else { %>
    <div class="user_profile_section">
        <div class="section_name">
            <h2>User Profile</h2>
        </div>
        
        <div style="text-align: center; margin-top: 10%;" class="form-group">
            <label for="profilePicture">
                <% if (otherUser.ProfilePicture === null) { %>
                    <img style="width: 11vw; height: 11vw; border-radius: 50%; object-fit: cover;  border-style: solid;background-color: #d3dcdc; border-color: #d3dcdc;" src="/images/default.jpg" alt="missing_profile_picture">
                <% } else { %>
                    <img style="width: 11vw; height: 11vw; border-radius: 50%; object-fit: cover;  border-style: solid;background-color: #d3dcdc; border-color: #d3dcdc;" src="<%="/" + otherUser.ProfilePicture %>" alt="profile_picture">
                <% } %>
            </label>
            
            
            
            <div style="margin-top: 5%; font-size: 2vw; color: #003c71;font-size: larger; font-weight: bold;">
                <p id="other-user"><%=otherUser.UserName%></p>
            </div>
        <div style="border-style: solid;width: 90% !important; margin-left: 5%;margin-top: 5%; border-width: 1px;border-color: #d3dcdc;">
            <div class="form-group">
                <div style="margin-top: 5%;" class="bio-text">
                    
                    <p id="other-user"><%=otherUser.UserNickName%></p>
                </div>
                <div style="margin-top: 5%; " class="bio-text">
                    <p id="other-user">Program: <%= otherUser.Program ? otherUser.Program : 'Empty' %></p>
                </div>
                <div style="margin-top: 5%; " class="bio-text">
                    <p id="other-user">Set: <%= otherUser.StudentSet ? otherUser.StudentSet : 'Empty' %></p>
                </div>
            </div>
            <%
            // Get the DateJoined value from otherUser
            const dateJoined = new Date(otherUser.DateJoined);

            // Extract year, month, and day
            const year = dateJoined.getFullYear();
            const month = String(dateJoined.getMonth() + 1).padStart(2, '0');
            const day = String(dateJoined.getDate()).padStart(2, '0');

            // Formatted date in YYYY-MM-DD format
            const formattedDate = `${year}-${month}-${day}`;
            %>
            <div style="margin-top: 5%; " class="bio-text">
                <p id="other-user"><%= formattedDate %></p>
            </div>
                <div style="margin-top: 5%; " class="bio-text">
                    <p id="other-user"><%=otherUser.Email%></p>
                    
                </div>
               
            </div>
        </div>
        <div>
        <div class="extend" style="justify-content: center;">
           <a href="/chat/check/<%= otherUser.UserID %>"><button>Send a message</button></a>
        </div>
        </div>
    </div>
    
    <div class="user_feed_section">
        <div style="position: fixed; width: 59.3%;" class="section_name">
            <h2>Recent Posts</h2>
        </div>
        <div style="margin-top: 50px;">
            <%
            function formatDate(timeString) {
                const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                
                const date = new Date(timeString);
                const month = months[date.getMonth()];
                const day = date.getDate();
                const year = date.getFullYear();
                
                const hours = date.getHours();
                const minutes = date.getMinutes();
                const ampm = hours >= 12 ? 'PM' : 'AM';
                const formattedHours = hours % 12 || 12; // Convert 0 to 12 for AM/PM format
                const formattedMinutes = minutes < 10 ? '0' + minutes : minutes; // Add leading zero if minutes is less than 10
                
                return `${month} ${day}, ${year} - ${formattedHours}:${formattedMinutes} ${ampm}`;
            }
            %>
            <% posts.slice().reverse().forEach(function(post) { %>
                <div class="post">
                  <% const userData = userDataMap[post.UserID]; %>
                  <div class="user-info">
                    <img class="user-info-img" src="<%= "/" + userData.profilePicture %>" alt="user_profile_picture" width="50" height="50">
                      <div class="text-user-info">
                          <p class="post-info" id="post-username">
                              <%= userData.username %>
                          </p>
                          <p class="post-info" id="post-date">
                              <%= formatDate(post.TimePosted) %>
                          </p>
                      </div>
                    <div class="report-section" style="text-align: right; margin-left: 270px; ">
                        <div class="kebab-menu">
                            <button class="post-kebab" onclick="toggleMenu('<%= post.PostID %>')">
                                <span class="dot"></span>
                                <span class="dot"></span>
                                <span class="dot"></span>
                            </button>

                            <!-- Dropdown menu -->
                            <div id="dropdownMenu<%= post.PostID %>" class="dropdown-menu-kebab">

                                <% if (post.UserID !== user.UserID) { %>
                                    <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                    <a href="#" onclick="report('<%= post.PostID %>')">Report</a>
                                    <a href="#">Message Creator</a>
                                <% } else if (post.UserID === user.UserID || user.role === "admin") { %>
                                <a href=<%="/post/edit/" + post.PostID%>>Edit</a>
                                <a href="#" onclick="copyLink('<%= post.PostID %>')">Copy Link</a>
                                <a href="#" onclick="deletePost('<%= post.PostID %>')">Delete</a>
                                <% } %>
                            </div>
                        </div>
                        <div id="popup<%= post.PostID %>" class="popup">
                            <div class="popup-content">
                              <p>Are you sure you want to report this post?</p><div class="buttons">
                                <button class="yes-btn" onclick="Submit('<%= post.PostID %>')">Yes</button>
                                <button class="no-btn" onclick="Close('<%= post.PostID %>')">No</button>
                              </div>
                            </div>
                          </div>
                      </div>
                  </div>
                  <div style="text-align: left; margin-left: 70px;"><h3><%= post.Title %> </h3><p id="post"><%= post.Description %></p></div>
                    <% if (post.Picture) { %>
                    <a href=<%="/post/" + post.PostID%>>
                        <img class="post-img" src="<%= "/" + post.Picture %>" alt="post_picture" width="400" height="200">
                    </a>
                    <% } %>
                  <div class="like-section" style="text-align: left; margin-left: 70px;">
                

                    <button style=" padding-top: 5px;padding-bottom: 5px; margin-top: 10px;border-radius: 24px; border: none; background-color: #d3dcdc ;" onclick="toggleLike('<%= post.PostID %>')">
                        <img style=" width: 50%; height: 50%;" src="/images/facebook-like-48.png" alt="Like_button">
                    </button>
                    <span id="like-count-<%= post.PostID %>"><%= post.likeCount %></span>
                  </div>
                </div>
                <% }); %>
        <div >
            <hr>
            <p id="post-footer" style="text-align: center;">
                *Cricket noises.*<br>
                No older posts found.
            </p> 
        </div>
        </div>
        
    </div>
    <% } %>


    <script>
        function copyLink(postId) {
            // Prevent the default action of the <a> tag
            event.preventDefault();

            // Construct the URL of the post
            const postUrl = window.location.origin + '/post/' + postId;

            // Copy the URL to the clipboard
            navigator.clipboard.writeText(postUrl)
                .then(() => {
                    console.log('Link copied to clipboard');

                    // Create a new div element for the message
                    const messageDiv = document.createElement('div');
                    messageDiv.textContent = 'Copied to clipboard';
                    messageDiv.style.position = 'fixed';
                    messageDiv.style.bottom = '20px';
                    messageDiv.style.left = '50%';
                    messageDiv.style.backgroundColor = 'lightgreen';
                    messageDiv.style.padding = '10px';
                    messageDiv.style.borderRadius = '5px';

                    // Append the message to the body
                    document.body.appendChild(messageDiv);

                    // Remove the message after 2 seconds
                    setTimeout(() => {
                        document.body.removeChild(messageDiv);
                    }, 2000);
                })
                .catch(err => {
                    console.error('Error copying link to clipboard:', err);
                });
        }
        async function deletePost(postId) {
            try {
                const response = await fetch(`/post/delete/${postId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    // If the server responds with a success status, redirect to the desired page
                    window.location.href = '/profile/<%= otherUser.UserID %>';
                } else {
                    console.error('Failed to delete post');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }
        window.onload = function() {
            // Get all dropdown menus
            var dropdowns = document.getElementsByClassName('dropdown-menu-kebab');

            // Initialize style.display to 'none' for each dropdown menu
            for (var i = 0; i < dropdowns.length; i++) {
                dropdowns[i].style.display = 'none';
            }
        }
        function toggleMenu(postId) {
            var menu = document.getElementById('dropdownMenu' + postId);
            if (menu.style.display === 'none') {
                menu.style.display = 'block';
            } else {
                menu.style.display = 'none';
            }
        }
        document.addEventListener('click', function(event) {
            var kebabMenus = document.querySelectorAll('.kebab-menu');
            var isClickInside = Array.from(kebabMenus).some(menu => menu.contains(event.target));

            if (!isClickInside) {
                var dropdowns = document.querySelectorAll('.dropdown-menu-kebab');
                for (var i = 0; i < dropdowns.length; i++) {
                    dropdowns[i].style.display = 'none';
                }
            }
        });
        // Initialize a boolean variable to track form changes
        var formChanged = false;
    
        // Event listener for clicks on input fields
        document.querySelectorAll('input').forEach(function(input) {
            input.addEventListener('click', function() {
                formChanged = true; // Set formChanged to true when clicking on an input field
            });
        });
    
        // Event listener for clicks on select elements
        document.querySelectorAll('select').forEach(function(select) {
            select.addEventListener('click', function() {
                formChanged = true; // Set formChanged to true when clicking on a select element
            });
        });
        
    
        // Event listener for clicks on <p> tags within the form
        document.querySelectorAll('p:not(#email-text):not(#dateJoined-text):not(#post-footer):not(#post):not(#other-user)').forEach(function(p) {
            p.addEventListener('click', function() {
                formChanged = true;
                this.style.display = 'none';
                var form = this.nextElementSibling;
                form.style.display = 'block';
                form.nextElementSibling.style.display = 'block';
                 // Set formChanged to true when interacting with the input
            });
        });
    
        // Event listener for input changes
        document.querySelectorAll('input, select, textarea').forEach(function(element) {
            element.addEventListener('change', function() {
                formChanged = true;
            });
        });
    
        // Event listener for focus out
        document.querySelectorAll('input, textarea').forEach(function(input) {
            input.addEventListener('blur', function() {
                if (formChanged) {
                    document.getElementById('profile-form').submit();
                }
            });
        });
    
        // Event listener for Enter key
        document.body.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && formChanged) {
                e.preventDefault();
                document.getElementById('profile-form').submit();
            }
        });
    
  // Event listener for form submission
document.getElementById('profile-form').addEventListener('submit', function(e) {
    // Prevent the default form submission behavior
    e.preventDefault();

    // Get the value of the "Set" field
    var studentSet = document.getElementById('studentSet').value = "<%=otherUser.StudentSet%>"

    // Check if the "Set" field is not empty
    if (studentSet !== '') {
        // Submit the form
        this.submit();
    }
});
    
        // Event listener for clicks outside the form
        document.body.addEventListener('click', function(event) {
            var profileForm = document.getElementById('profile-form');
            if (!profileForm.contains(event.target)) {
                if (formChanged) {
                    profileForm.submit();
                }
            }
        });
    
        // Event listener for clicks on the student set text
        document.querySelector('#studentSet-text').addEventListener('click', function() {
            if (!document.querySelector('#studentSet')) {
                this.style.display = 'none';
                var select = document.createElement('select');
                select.id = 'studentSet';
                select.name ='studentSet';
                var alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
                for (var i = 0; i < alphabet.length; i++) {
                    var option = document.createElement('option');
                    option.text = alphabet[i];
                    select.add(option);
                }
                select.style.margin = '0 auto'; // Centering the select element
                this.parentNode.insertBefore(select, this.nextElementSibling);
                select.style.display = 'block';
                select.nextElementSibling.style.display = 'block';
                formChanged = true; // Set formChanged to true when interacting with the input
    
                // Add event listener to the select element
                select.addEventListener('change', function() {
                    document.getElementById('profile-form').submit();
                });
            }
        });
        async function toggleLike(postId) {
    try {
      const response = await fetch(`/like/${postId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      const result = await response.json();
      if (result.success) {
        const likeCountElement = document.getElementById(`like-count-${postId}`);
        let currentCount = parseInt(likeCountElement.textContent);
        likeCountElement.textContent = result.liked ? currentCount + 1 : currentCount - 1;
      } else {
        console.error('Failed to toggle like');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  }

  async function report(postId) {
    document.getElementById('popup'+postId).style.display = 'block';
  }
  async function Submit(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
    console.log(postId);
  
    await fetch(`/report/${postId}`, {
      method: 'POST',
      userID: userID,

    });
  
  }
  async function Close(postId) {
    document.getElementById('popup'+postId).style.display = 'none';
  }

    </script>
    
</body>
</html>
  
